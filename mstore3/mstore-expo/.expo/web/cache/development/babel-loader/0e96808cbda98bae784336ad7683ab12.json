{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _apiEcommerce = require(\"api-ecommerce\");\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nvar _netinfo = _interopRequireDefault(require(\"@react-native-community/netinfo\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _common = require(\"@common\");\n\nvar _containers = require(\"@containers\");\n\nvar _components = require(\"@components\");\n\nvar _navigation = _interopRequireWildcard(require(\"@navigation\"));\n\nvar _MenuOverlay = _interopRequireDefault(require(\"@components/LeftMenu/MenuOverlay\"));\n\nvar _Omni = require(\"./Omni\");\n\nvar _jsxFileName = \"/Users/javadoge/mstore3/mstore-expo/src/Router.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Router = function (_React$PureComponent) {\n  (0, _inherits2.default)(Router, _React$PureComponent);\n\n  var _super = _createSuper(Router);\n\n  function Router(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Router);\n    _this = _super.call(this, props);\n\n    _this.goToScreen = function (routeName, params) {\n      if (!(_navigation.navigationRef == null ? void 0 : _navigation.navigationRef.current)) {\n        return (0, _Omni.toast)(\"Cannot navigate\");\n      }\n\n      if (routeName) {\n        var _navigationRef$curren;\n\n        _navigation.navigationRef == null ? void 0 : (_navigationRef$curren = _navigation.navigationRef.current) == null ? void 0 : _navigationRef$curren.navigate(routeName, params);\n      }\n\n      (0, _Omni.closeDrawer)();\n    };\n\n    _this.state = {\n      loading: true\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(Router, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props, language, updateConnectionStatus, fetchHomeLayouts, netInfo;\n\n      return _regenerator.default.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = this.props, language = _this$props.language, updateConnectionStatus = _this$props.updateConnectionStatus, fetchHomeLayouts = _this$props.fetchHomeLayouts;\n\n              _reactNative.I18nManager.forceRTL(language.lang === \"ar\");\n\n              _apiEcommerce.WooWorker.init({\n                url: _common.Config.WooCommerce.url,\n                consumerKey: _common.Config.WooCommerce.consumerKey,\n                consumerSecret: _common.Config.WooCommerce.consumerSecret,\n                wp_api: true,\n                version: \"wc/v3\",\n                queryStringAuth: true,\n                language: language.lang\n              });\n\n              _context.next = 5;\n              return _regenerator.default.awrap(fetchHomeLayouts(_common.Config.HomeCaching.url, _common.Config.HomeCaching.enable));\n\n            case 5:\n              _context.next = 7;\n              return _regenerator.default.awrap(_netinfo.default.fetch());\n\n            case 7:\n              netInfo = _context.sent;\n              updateConnectionStatus(netInfo.type !== \"none\");\n              this.setState({\n                loading: false\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var loading = this.state.loading;\n      var _this$props2 = this.props,\n          isDarkTheme = _this$props2.isDarkTheme,\n          introStatus = _this$props2.introStatus,\n          navigation = _this$props2.navigation,\n          initializing = _this$props2.initializing;\n\n      if (!introStatus) {\n        return _react.default.createElement(_components.AppIntro, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 14\n          }\n        });\n      }\n\n      if (loading || initializing) {\n        return _react.default.createElement(_containers.SplashScreen, {\n          navigation: navigation,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 14\n          }\n        });\n      }\n\n      var theme = isDarkTheme ? _common.Theme.dark : _common.Theme.light;\n      return _react.default.createElement(_reactNativePaper.ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_MenuOverlay.default, {\n        goToScreen: this.goToScreen,\n        routes: _react.default.createElement(_reactNative.View, {\n          style: [_common.Styles.app, {\n            backgroundColor: theme.colors.background\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }\n        }, _react.default.createElement(_reactNative.StatusBar, {\n          barStyle: isDarkTheme ? \"light-content\" : \"dark-content\",\n          animated: true,\n          hidden: _common.Device.isIphoneX ? false : !_common.Config.showStatusBar,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }\n        }), _react.default.createElement(_containers.MyToast, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }\n        }), _react.default.createElement(_native.NavigationContainer, {\n          ref: _navigation.navigationRef,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }\n        }, _react.default.createElement(_navigation.default, {\n          theme: theme,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }\n        })), _react.default.createElement(_components.ModalReview, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return Router;\n}(_react.default.PureComponent);\n\nRouter.propTypes = {\n  introStatus: _propTypes.default.bool\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    introStatus: state.user.finishIntro,\n    userInfo: state.user.user,\n    language: state.language,\n    netInfo: state.netInfo,\n    isDarkTheme: state.app.isDarkTheme,\n    rtl: state.language.rtl,\n    initializing: state.layouts.initializing\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  var NetInfoRedux = require(\"@redux/NetInfoRedux\");\n\n  var LayoutRedux = require(\"@redux/LayoutRedux\");\n\n  return {\n    updateConnectionStatus: function updateConnectionStatus(isConnected) {\n      dispatch(NetInfoRedux.actions.updateConnectionStatus(isConnected));\n    },\n    fetchHomeLayouts: function fetchHomeLayouts(url, enable) {\n      dispatch(LayoutRedux.actions.fetchHomeLayouts(url, enable));\n    }\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Router);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/javadoge/mstore3/mstore-expo/src/Router.js"],"names":["Router","props","goToScreen","routeName","params","navigationRef","current","navigate","state","loading","language","updateConnectionStatus","fetchHomeLayouts","I18nManager","forceRTL","lang","WooWorker","init","url","Config","WooCommerce","consumerKey","consumerSecret","wp_api","version","queryStringAuth","HomeCaching","enable","NetInfo","fetch","netInfo","type","setState","isDarkTheme","introStatus","navigation","initializing","theme","Theme","dark","light","Styles","app","backgroundColor","colors","background","Device","isIphoneX","showStatusBar","React","PureComponent","propTypes","PropTypes","bool","mapStateToProps","user","finishIntro","userInfo","rtl","layouts","mapDispatchToProps","dispatch","NetInfoRedux","require","LayoutRedux","isConnected","actions"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View, StatusBar, I18nManager } from \"react-native\";\nimport { WooWorker } from \"api-ecommerce\";\nimport { ThemeProvider } from \"react-native-paper\";\nimport NetInfo from \"@react-native-community/netinfo\";\nimport { connect } from \"react-redux\";\nimport { NavigationContainer } from \"@react-navigation/native\";\n\nimport { Config, Device, Styles, Languages, Theme } from \"@common\";\nimport { MyToast, SplashScreen } from \"@containers\";\nimport { AppIntro, ModalReview } from \"@components\";\nimport Navigation, { navigationRef } from \"@navigation\";\n\nimport MenuSide from \"@components/LeftMenu/MenuOverlay\";\n// import MenuSide from \"@components/LeftMenu/MenuScale\";\n// import MenuSide from '@components/LeftMenu/MenuSmall';\n// import MenuSide from '@components/LeftMenu/MenuWide';\n\nimport { toast, closeDrawer } from \"./Omni\";\n\nclass Router extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n    };\n  }\n\n  // eslint-disable-next-line react/static-property-placement\n  static propTypes = {\n    introStatus: PropTypes.bool,\n  };\n\n  async componentDidMount() {\n    const { language, updateConnectionStatus, fetchHomeLayouts } = this.props;\n\n    // Enable for mode RTL\n    I18nManager.forceRTL(language.lang === \"ar\");\n\n    // init wooworker\n    WooWorker.init({\n      url: Config.WooCommerce.url,\n      consumerKey: Config.WooCommerce.consumerKey,\n      consumerSecret: Config.WooCommerce.consumerSecret,\n      wp_api: true,\n      version: \"wc/v3\",\n      queryStringAuth: true,\n      language: language.lang,\n    });\n\n    // initial json file from server or local\n    await fetchHomeLayouts(Config.HomeCaching.url, Config.HomeCaching.enable);\n\n    const netInfo = await NetInfo.fetch();\n\n    updateConnectionStatus(netInfo.type !== \"none\");\n\n    this.setState({ loading: false });\n  }\n\n  goToScreen = (routeName, params) => {\n    if (!navigationRef?.current) {\n      return toast(\"Cannot navigate\");\n    }\n\n    // fix the navigation for Custom page\n    if (routeName) {\n      navigationRef?.current?.navigate(routeName, params);\n    }\n\n    closeDrawer();\n  };\n\n  render() {\n    const { loading } = this.state;\n    const { isDarkTheme, introStatus, navigation, initializing } = this.props;\n\n    if (!introStatus) {\n      return <AppIntro />;\n    }\n\n    if (loading || initializing) {\n      return <SplashScreen navigation={navigation} />;\n    }\n\n    // get theme based on dark or light mode\n    const theme = isDarkTheme ? Theme.dark : Theme.light;\n\n    return (\n      <ThemeProvider theme={theme}>\n        <MenuSide\n          goToScreen={this.goToScreen}\n          routes={\n            <View\n              style={[\n                Styles.app,\n                { backgroundColor: theme.colors.background },\n              ]}>\n              <StatusBar\n                barStyle={isDarkTheme ? \"light-content\" : \"dark-content\"}\n                animated\n                hidden={Device.isIphoneX ? false : !Config.showStatusBar}\n              />\n              <MyToast />\n\n              <NavigationContainer ref={navigationRef}>\n                <Navigation theme={theme} />\n              </NavigationContainer>\n\n              <ModalReview />\n            </View>\n          }\n        />\n      </ThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  introStatus: state.user.finishIntro,\n  userInfo: state.user.user,\n  language: state.language,\n  netInfo: state.netInfo,\n  isDarkTheme: state.app.isDarkTheme,\n  rtl: state.language.rtl,\n\n  initializing: state.layouts.initializing,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  const NetInfoRedux = require(\"@redux/NetInfoRedux\");\n  const LayoutRedux = require(\"@redux/LayoutRedux\");\n\n  return {\n    updateConnectionStatus: (isConnected) => {\n      dispatch(NetInfoRedux.actions.updateConnectionStatus(isConnected));\n    },\n    fetchHomeLayouts: (url, enable) => {\n      dispatch(LayoutRedux.actions.fetchHomeLayouts(url, enable));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Router);\n"]},"metadata":{},"sourceType":"script"}